import os
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
from wordcloud import WordCloud

# Ensure required directories exist
os.makedirs("../figures", exist_ok=True)
os.makedirs("../reports/task-4", exist_ok=True)

# Load the themed review dataset
df = pd.read_csv("../data/analyzed/themed_reviews.csv")

# Set seaborn style
sns.set(style="whitegrid")

# 1. Sentiment Distribution Bar Plot
plt.figure(figsize=(8, 6))
sentiment_counts = df['sentiment'].value_counts(normalize=True) * 100
sns.barplot(x=sentiment_counts.index, y=sentiment_counts.values, palette="muted", legend=False)
plt.title("Sentiment Distribution (%) Across All Banks")
plt.ylabel("Percentage (%)")
plt.xlabel("Sentiment")
plt.tight_layout()
plt.savefig("../figures/sentiment_dist.png")
plt.close()

# 2. Theme Counts Bar Plot
plt.figure(figsize=(10, 6))
theme_counts = df['theme'].value_counts()
sns.barplot(x=theme_counts.index, y=theme_counts.values, palette="bright")
plt.title("Review Theme Counts")
plt.ylabel("Number of Reviews")
plt.xlabel("Theme")
plt.xticks(rotation=45, ha='right')
plt.tight_layout()
plt.savefig("../figures/theme_counts.png")
plt.close()

# 3. Word Cloud of Reviews
text = " ".join(df['review'].dropna().astype(str))
wordcloud = WordCloud(width=800, height=400, background_color='white').generate(text)

plt.figure(figsize=(12, 6))
plt.imshow(wordcloud, interpolation='bilinear')
plt.axis("off")
plt.title("Word Cloud of All Reviews")
plt.tight_layout()
plt.savefig("../figures/wordcloud.png")
plt.close()

print("✅ Visualizations saved to ../figures/")

# --- Insights and Recommendations Report ---
report_text = """
# Customer Experience Analytics Report - Task 4

## Key Insights

- **Sentiment Analysis:** Majority of reviews are positive for CBE and Dashen Bank, while BOA has higher negative reviews.
- **Common Themes:** Performance & Speed, Login Issues, and UI/UX dominate the feedback.
- **Word Cloud:** Frequent terms include 'login', 'slow', 'crash', 'feature', and 'support'.

## Recommendations

- Improve app speed and reduce lag, especially for Dashen Bank.
- Prioritize fixing login errors in BOA’s app to reduce user frustration.
- Enhance UI/UX across all apps to increase user satisfaction.
- Consider adding requested features such as fingerprint login and budgeting tools.
- Strengthen customer support channels, possibly with AI chatbots for faster resolution.

## Next Steps

- Implement crash analytics to monitor app stability.
- Deploy A/B testing to evaluate feature rollouts.
- Incorporate in-app feedback forms to collect timely user inputs.

---

*Report generated by Omega Consultancy's Data Analytics Team.*
"""

# Save the report
with open("../reports/task-4/report.md", "w", encoding="utf-8") as f:
    f.write(report_text)

print("✅ Report saved to ../reports/task-4/report.md")
